{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAY,CAChBC,KAAMC,SAASC,cAAc,SAC7BC,UAAYF,SAASC,cAAc,WAE/BE,EAAS,GAuBf,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIN,EAAUC,GACN,IAAIM,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACDR,EACRM,EAAQ,CAACG,SAAAX,EAAUY,MAAAX,IAEnBQ,EAAO,CAACE,SAAAX,EAAUY,MAAAX,GAAO,GAEzBA,EAAM,IAGPY,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAvB,GAASwB,OAAOC,QAAQ,qBAAqBL,QAAeC,MAAU,IAEvEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAvB,GAASwB,OAAOG,QAAQ,oBAAoBP,QAAeC,MAAU,G,CAtC3EnB,EAAUC,KAAKyB,iBAAiB,SAgBhC,SAAsBC,GACpB,MAAMC,EAASD,EAAIE,OAAOC,aAAa,QACvCzB,EAAO,GAAGuB,KAAYD,EAAIE,OAAOE,K,IAjBnC/B,EAAUI,UAAUsB,iBAAiB,SAErC,SAAuBC,GACrBA,EAAIK,iBACJ,IAAIb,EAAQc,OAAO5B,EAAOc,OACxBe,EAAOD,OAAO5B,EAAO6B,MACnBC,EAASF,OAAO5B,EAAO8B,QAC3B,IAAK,IAAIjB,EAAW,EAAGA,EAAWiB,EAAS,EAAGjB,GAAY,EACpDA,GAAU,IACZC,GAAQe,GAEZ5B,EAAcY,EAAUC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst selectors = {\n  form: document.querySelector(\".form\"),\n  submitBtn : document.querySelector(\"button\")\n}\nconst values = {}\n\nselectors.form.addEventListener(\"input\", hendlerInput)\nselectors.submitBtn.addEventListener(\"click\", handlerSubmit)\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault()\n  let delay = Number(values.delay);\nlet step = Number(values.step);\n  let amount = Number(values.amount)\n  for (let position = 1; position < amount + 1; position += 1) {\n    if (position>=2) {\n      delay+= step\n    }\n  createPromise(position, delay)\n}\n}\n\nfunction hendlerInput(evt) {\n  const objKey = evt.target.getAttribute(\"name\")\n  values[`${objKey}`] = evt.target.value\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(position, delay);\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n          if (shouldResolve) {\n      resolve({position, delay})\n    } else {\n      reject({position, delay})\n    }\n    },delay)\n  })\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$selectors","form","document","querySelector","submitBtn","$47d4ff9957288465$var$values","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","evt","objKey","target","getAttribute","value","preventDefault","Number","step","amount"],"version":3,"file":"03-promises.3da47d3c.js.map"}