{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAY,CAChBC,KAAMC,SAASC,cAAc,SAC7BC,UAAYF,SAASC,cAAc,WAE/BE,EAAS,GAuBf,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIN,EAAUC,GACN,IAAIM,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACDR,EACRM,EAAQ,CAACR,WAAUC,UAEnBQ,EAAO,CAACT,WAAUC,S,GAElBA,E,IAGDU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARZ,SAAUc,EAAKF,EAALX,MACjBc,EAAAxB,GAASyB,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEnEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARZ,SAAUc,EAAKF,EAALX,MAClBc,EAAAxB,GAASyB,OAAOI,QAAQ,oBAAmCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAtCvErB,EAAUC,KAAK2B,iBAAiB,SAgBhC,SAAsBC,GACpB,IAAMC,EAASD,EAAIE,OAAOC,aAAa,QACvC3B,EAAO,GAAUoB,OAAPK,IAAYD,EAAIE,OAAOE,K,IAjBnCjC,EAAUI,UAAUwB,iBAAiB,SAErC,SAAuBC,GACrBA,EAAIK,iBAIJ,IAHA,IAAI1B,EAAQ2B,OAAO9B,EAAOG,OACxB4B,EAAOD,OAAO9B,EAAO+B,MACnBC,EAASF,OAAO9B,EAAOgC,QAClB9B,EAAW,EAAGA,EAAW8B,EAAS,EAAG9B,GAAY,EACpDA,GAAU,IACZC,GAAQ4B,GAEZ9B,EAAcC,EAAUC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst selectors = {\n  form: document.querySelector(\".form\"),\n  submitBtn : document.querySelector(\"button\")\n}\nconst values = {}\n\nselectors.form.addEventListener(\"input\", hendlerInput)\nselectors.submitBtn.addEventListener(\"click\", handlerSubmit)\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault()\n  let delay = Number(values.delay);\nlet step = Number(values.step);\n  let amount = Number(values.amount)\n  for (let position = 1; position < amount + 1; position += 1) {\n    if (position>=2) {\n      delay+= step\n    }\n  createPromise(position, delay)\n}\n}\n\nfunction hendlerInput(evt) {\n  const objKey = evt.target.getAttribute(\"name\")\n  values[`${objKey}`] = evt.target.value\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(position, delay);\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n          if (shouldResolve) {\n      resolve({position, delay})\n    } else {\n      reject({position, delay})\n    }\n    },delay)\n  })\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$selectors","form","document","querySelector","submitBtn","$ce04d3a99e08e73b$var$values","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","objKey","target","getAttribute","value","preventDefault","Number","step","amount"],"version":3,"file":"03-promises.86fe9025.js.map"}